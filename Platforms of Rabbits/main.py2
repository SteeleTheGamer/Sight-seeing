import pygame
import sys
# Set game setting
FPS = 60  # Frames per second
SCREEN_WIDTH = 800
SCREEN_HEIGHT = 600
SPEED = 10
PLAYER_WIDTH = 100
PLAYER_HEIGHT = 100
HITBOX = 68
JUMP_SPEED = 10
GRAVITY = 0
JUMP_POWER = 17
PLATFORM_COLOR = (0,0,0)
# Create the window
PLATFORMS = [pygame.Rect(0, SCREEN_HEIGHT - 100, SCREEN_WIDTH, 40)]
class Player:
    def __init__(self, x, y):
        goober = pygame.image.load("goober.png").convert_alpha()
        scale_factor = PLAYER_HEIGHT/goober.get_height()
        new_width = int(goober.get_width()*scale_factor)
        self.image = pygame.transform.scale(goober, (new_width, PLAYER_HEIGHT))
        self.image_offset_y = -(PLAYER_HEIGHT - HITBOX)
        self.rect = pygame.Rect(x, y, new_width, PLAYER_HEIGHT)
        self.vel_y = 0
        self.on_ground = False
    def handle_input(self, keys):
        dx = 0
        if keys[pygame.K_a]:
            dx = -SPEED
        if keys[pygame.K_d]:
            dx = SPEED
        self.rect.x += dx
        if keys[pygame.K_SPACE] and self.on_ground:
            self.vel_y = -JUMP_POWER
            self.on_ground = False
    def gravity(self):
        self.vel_y += GRAVITY
        self.rect.y += self.vel_y
    def platformc(self, platforms):
        self.on_ground = False
        for plat in platforms:
            if self.rect.colliderect(plat):
                if self.vel_y > 0 and self.rect.bottom <= plat.top + self.vel_y:
                    self.rect.bottom = plat.top
                    self.vel_y = 0
                    self.on_ground = True

    def update(self, platforms):
        self.gravity()
        self.platformc(platforms)

    def draw(self, surface):
        draw_x = self.rect.x
        draw_y = self.rect.y - self.image_offset_y
        surface.blit(self.image, (draw_x, draw_y))
def main():
    # Initialize Pygame
    pygame.init()
    screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))
    pygame.display.set_caption("My First Platformer")
    # Set up the game clock
    clock = pygame.time.Clock()
    player = Player(100, SCREEN_HEIGHT - PLAYER_HEIGHT - 100)
    # Main game loop
    running = True

    while running:
        clock.tick(FPS)  # Control the frame rate
        keys = pygame.key.get_pressed()
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False  # Exit the loop
        player.handle_input(keys)
        player.update(PLATFORMS)
        # Fill screen with a background color
        screen.fill((200, 220, 255))  # Light blue
        for plat in PLATFORMS:
            pygame.draw.rect(screen, PLATFORM_COLOR, plat)
        player.draw(screen)
        pygame.draw.rect(screen, (255,0,0), player.rect, 2)
        # Update the display
        pygame.display.flip()
    # Quit Pygame properly
    pygame.quit()
    sys.exit()

main()